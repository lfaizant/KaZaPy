//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18047
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminInterface.AlbumService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AlbumService.IAlbumService")]
    public interface IAlbumService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumById", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumByIdResponse")]
        ObjectClass.Album GetAlbumById(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumById", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumByIdResponse")]
        System.Threading.Tasks.Task<ObjectClass.Album> GetAlbumByIdAsync(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumByNameAndOwner", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumByNameAndOwnerResponse")]
        ObjectClass.Album GetAlbumByNameAndOwner(string name, int owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumByNameAndOwner", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumByNameAndOwnerResponse")]
        System.Threading.Tasks.Task<ObjectClass.Album> GetAlbumByNameAndOwnerAsync(string name, int owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumsByUser", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumsByUserResponse")]
        ObjectClass.Album[] GetAlbumsByUser(ObjectClass.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumsByUser", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumsByUserResponse")]
        System.Threading.Tasks.Task<ObjectClass.Album[]> GetAlbumsByUserAsync(ObjectClass.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAllAlbums", ReplyAction="http://tempuri.org/IAlbumService/GetAllAlbumsResponse")]
        ObjectClass.Album[] GetAllAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAllAlbums", ReplyAction="http://tempuri.org/IAlbumService/GetAllAlbumsResponse")]
        System.Threading.Tasks.Task<ObjectClass.Album[]> GetAllAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/AddAlbum", ReplyAction="http://tempuri.org/IAlbumService/AddAlbumResponse")]
        void AddAlbum(ObjectClass.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/AddAlbum", ReplyAction="http://tempuri.org/IAlbumService/AddAlbumResponse")]
        System.Threading.Tasks.Task AddAlbumAsync(ObjectClass.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/DeleteAlbum", ReplyAction="http://tempuri.org/IAlbumService/DeleteAlbumResponse")]
        void DeleteAlbum(ObjectClass.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/DeleteAlbum", ReplyAction="http://tempuri.org/IAlbumService/DeleteAlbumResponse")]
        System.Threading.Tasks.Task DeleteAlbumAsync(ObjectClass.Album album);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlbumServiceChannel : AdminInterface.AlbumService.IAlbumService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlbumServiceClient : System.ServiceModel.ClientBase<AdminInterface.AlbumService.IAlbumService>, AdminInterface.AlbumService.IAlbumService {
        
        public AlbumServiceClient() {
        }
        
        public AlbumServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlbumServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlbumServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlbumServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ObjectClass.Album GetAlbumById(int albumId) {
            return base.Channel.GetAlbumById(albumId);
        }
        
        public System.Threading.Tasks.Task<ObjectClass.Album> GetAlbumByIdAsync(int albumId) {
            return base.Channel.GetAlbumByIdAsync(albumId);
        }
        
        public ObjectClass.Album GetAlbumByNameAndOwner(string name, int owner) {
            return base.Channel.GetAlbumByNameAndOwner(name, owner);
        }
        
        public System.Threading.Tasks.Task<ObjectClass.Album> GetAlbumByNameAndOwnerAsync(string name, int owner) {
            return base.Channel.GetAlbumByNameAndOwnerAsync(name, owner);
        }
        
        public ObjectClass.Album[] GetAlbumsByUser(ObjectClass.User user) {
            return base.Channel.GetAlbumsByUser(user);
        }
        
        public System.Threading.Tasks.Task<ObjectClass.Album[]> GetAlbumsByUserAsync(ObjectClass.User user) {
            return base.Channel.GetAlbumsByUserAsync(user);
        }
        
        public ObjectClass.Album[] GetAllAlbums() {
            return base.Channel.GetAllAlbums();
        }
        
        public System.Threading.Tasks.Task<ObjectClass.Album[]> GetAllAlbumsAsync() {
            return base.Channel.GetAllAlbumsAsync();
        }
        
        public void AddAlbum(ObjectClass.Album album) {
            base.Channel.AddAlbum(album);
        }
        
        public System.Threading.Tasks.Task AddAlbumAsync(ObjectClass.Album album) {
            return base.Channel.AddAlbumAsync(album);
        }
        
        public void DeleteAlbum(ObjectClass.Album album) {
            base.Channel.DeleteAlbum(album);
        }
        
        public System.Threading.Tasks.Task DeleteAlbumAsync(ObjectClass.Album album) {
            return base.Channel.DeleteAlbumAsync(album);
        }
    }
}

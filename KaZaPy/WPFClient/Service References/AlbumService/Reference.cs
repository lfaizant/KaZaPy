//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18047
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFClient.AlbumService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Album", Namespace="http://schemas.datacontract.org/2004/07/ObjectClass")]
    [System.SerializableAttribute()]
    public partial class Album : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime creationDateField;
        
        private int idField;
        
        private WPFClient.AlbumService.Image[] imagesField;
        
        private System.DateTime modificationDateField;
        
        private string nameField;
        
        private int ownerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime creationDate {
            get {
                return this.creationDateField;
            }
            set {
                if ((this.creationDateField.Equals(value) != true)) {
                    this.creationDateField = value;
                    this.RaisePropertyChanged("creationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WPFClient.AlbumService.Image[] images {
            get {
                return this.imagesField;
            }
            set {
                if ((object.ReferenceEquals(this.imagesField, value) != true)) {
                    this.imagesField = value;
                    this.RaisePropertyChanged("images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime modificationDate {
            get {
                return this.modificationDateField;
            }
            set {
                if ((this.modificationDateField.Equals(value) != true)) {
                    this.modificationDateField = value;
                    this.RaisePropertyChanged("modificationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int owner {
            get {
                return this.ownerField;
            }
            set {
                if ((this.ownerField.Equals(value) != true)) {
                    this.ownerField = value;
                    this.RaisePropertyChanged("owner");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://schemas.datacontract.org/2004/07/ObjectClass")]
    [System.SerializableAttribute()]
    public partial class Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int albumField;
        
        private byte[] blobField;
        
        private int idField;
        
        private int sizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int album {
            get {
                return this.albumField;
            }
            set {
                if ((this.albumField.Equals(value) != true)) {
                    this.albumField = value;
                    this.RaisePropertyChanged("album");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte[] blob {
            get {
                return this.blobField;
            }
            set {
                if ((object.ReferenceEquals(this.blobField, value) != true)) {
                    this.blobField = value;
                    this.RaisePropertyChanged("blob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int size {
            get {
                return this.sizeField;
            }
            set {
                if ((this.sizeField.Equals(value) != true)) {
                    this.sizeField = value;
                    this.RaisePropertyChanged("size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ObjectClass")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string emailField;
        
        private string firstNameField;
        
        private int idField;
        
        private string lastNameField;
        
        private bool loggedField;
        
        private string passwordField;
        
        private bool privilegeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool logged {
            get {
                return this.loggedField;
            }
            set {
                if ((this.loggedField.Equals(value) != true)) {
                    this.loggedField = value;
                    this.RaisePropertyChanged("logged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool privilege {
            get {
                return this.privilegeField;
            }
            set {
                if ((this.privilegeField.Equals(value) != true)) {
                    this.privilegeField = value;
                    this.RaisePropertyChanged("privilege");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AlbumService.IAlbumService")]
    public interface IAlbumService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumById", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumByIdResponse")]
        WPFClient.AlbumService.Album GetAlbumById(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumById", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumByIdResponse")]
        System.Threading.Tasks.Task<WPFClient.AlbumService.Album> GetAlbumByIdAsync(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumByNameAndOwner", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumByNameAndOwnerResponse")]
        WPFClient.AlbumService.Album GetAlbumByNameAndOwner(string name, int owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumByNameAndOwner", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumByNameAndOwnerResponse")]
        System.Threading.Tasks.Task<WPFClient.AlbumService.Album> GetAlbumByNameAndOwnerAsync(string name, int owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumsByUser", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumsByUserResponse")]
        WPFClient.AlbumService.Album[] GetAlbumsByUser(WPFClient.AlbumService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAlbumsByUser", ReplyAction="http://tempuri.org/IAlbumService/GetAlbumsByUserResponse")]
        System.Threading.Tasks.Task<WPFClient.AlbumService.Album[]> GetAlbumsByUserAsync(WPFClient.AlbumService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAllAlbums", ReplyAction="http://tempuri.org/IAlbumService/GetAllAlbumsResponse")]
        WPFClient.AlbumService.Album[] GetAllAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/GetAllAlbums", ReplyAction="http://tempuri.org/IAlbumService/GetAllAlbumsResponse")]
        System.Threading.Tasks.Task<WPFClient.AlbumService.Album[]> GetAllAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/AddAlbum", ReplyAction="http://tempuri.org/IAlbumService/AddAlbumResponse")]
        void AddAlbum(WPFClient.AlbumService.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/AddAlbum", ReplyAction="http://tempuri.org/IAlbumService/AddAlbumResponse")]
        System.Threading.Tasks.Task AddAlbumAsync(WPFClient.AlbumService.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/DeleteAlbum", ReplyAction="http://tempuri.org/IAlbumService/DeleteAlbumResponse")]
        void DeleteAlbum(WPFClient.AlbumService.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbumService/DeleteAlbum", ReplyAction="http://tempuri.org/IAlbumService/DeleteAlbumResponse")]
        System.Threading.Tasks.Task DeleteAlbumAsync(WPFClient.AlbumService.Album album);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlbumServiceChannel : WPFClient.AlbumService.IAlbumService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlbumServiceClient : System.ServiceModel.ClientBase<WPFClient.AlbumService.IAlbumService>, WPFClient.AlbumService.IAlbumService {
        
        public AlbumServiceClient() {
        }
        
        public AlbumServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlbumServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlbumServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlbumServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WPFClient.AlbumService.Album GetAlbumById(int albumId) {
            return base.Channel.GetAlbumById(albumId);
        }
        
        public System.Threading.Tasks.Task<WPFClient.AlbumService.Album> GetAlbumByIdAsync(int albumId) {
            return base.Channel.GetAlbumByIdAsync(albumId);
        }
        
        public WPFClient.AlbumService.Album GetAlbumByNameAndOwner(string name, int owner) {
            return base.Channel.GetAlbumByNameAndOwner(name, owner);
        }
        
        public System.Threading.Tasks.Task<WPFClient.AlbumService.Album> GetAlbumByNameAndOwnerAsync(string name, int owner) {
            return base.Channel.GetAlbumByNameAndOwnerAsync(name, owner);
        }
        
        public WPFClient.AlbumService.Album[] GetAlbumsByUser(WPFClient.AlbumService.User user) {
            return base.Channel.GetAlbumsByUser(user);
        }
        
        public System.Threading.Tasks.Task<WPFClient.AlbumService.Album[]> GetAlbumsByUserAsync(WPFClient.AlbumService.User user) {
            return base.Channel.GetAlbumsByUserAsync(user);
        }
        
        public WPFClient.AlbumService.Album[] GetAllAlbums() {
            return base.Channel.GetAllAlbums();
        }
        
        public System.Threading.Tasks.Task<WPFClient.AlbumService.Album[]> GetAllAlbumsAsync() {
            return base.Channel.GetAllAlbumsAsync();
        }
        
        public void AddAlbum(WPFClient.AlbumService.Album album) {
            base.Channel.AddAlbum(album);
        }
        
        public System.Threading.Tasks.Task AddAlbumAsync(WPFClient.AlbumService.Album album) {
            return base.Channel.AddAlbumAsync(album);
        }
        
        public void DeleteAlbum(WPFClient.AlbumService.Album album) {
            base.Channel.DeleteAlbum(album);
        }
        
        public System.Threading.Tasks.Task DeleteAlbumAsync(WPFClient.AlbumService.Album album) {
            return base.Channel.DeleteAlbumAsync(album);
        }
    }
}

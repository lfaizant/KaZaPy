//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18047
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFClient.ImageService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageInfo", Namespace="http://schemas.datacontract.org/2004/07/WebService")]
    [System.SerializableAttribute()]
    public partial class ImageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private int AlbumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int Album {
            get {
                return this.AlbumField;
            }
            set {
                if ((this.AlbumField.Equals(value) != true)) {
                    this.AlbumField = value;
                    this.RaisePropertyChanged("Album");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ImageService.IImageService")]
    public interface IImageService {
        
        // CODEGEN : La génération du contrat de message depuis l'opération AddImage n'est ni RPC, ni encapsulée dans un document.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/AddImage", ReplyAction="http://tempuri.org/IImageService/AddImageResponse")]
        WPFClient.ImageService.AddImageResponse AddImage(WPFClient.ImageService.ImageUploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/AddImage", ReplyAction="http://tempuri.org/IImageService/AddImageResponse")]
        System.Threading.Tasks.Task<WPFClient.ImageService.AddImageResponse> AddImageAsync(WPFClient.ImageService.ImageUploadRequest request);
        
        // CODEGEN : La génération du contrat de message depuis le nom de wrapper (ImageDownloadRequest) du message ImageDownloadRequest ne correspond pas à la valeur par défaut (GetImage)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/GetImage", ReplyAction="http://tempuri.org/IImageService/GetImageResponse")]
        WPFClient.ImageService.ImageDownloadResponse GetImage(WPFClient.ImageService.ImageDownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/GetImage", ReplyAction="http://tempuri.org/IImageService/GetImageResponse")]
        System.Threading.Tasks.Task<WPFClient.ImageService.ImageDownloadResponse> GetImageAsync(WPFClient.ImageService.ImageDownloadRequest request);
        
        // CODEGEN : La génération du contrat de message depuis l'opération DeleteImage n'est ni RPC, ni encapsulée dans un document.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/DeleteImage", ReplyAction="http://tempuri.org/IImageService/DeleteImageResponse")]
        WPFClient.ImageService.DeleteImageResponse DeleteImage(WPFClient.ImageService.ImageDeleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/DeleteImage", ReplyAction="http://tempuri.org/IImageService/DeleteImageResponse")]
        System.Threading.Tasks.Task<WPFClient.ImageService.DeleteImageResponse> DeleteImageAsync(WPFClient.ImageService.ImageDeleteRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImageUploadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ImageUploadRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public WPFClient.ImageService.ImageInfo ImageInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream ImageData;
        
        public ImageUploadRequest() {
        }
        
        public ImageUploadRequest(WPFClient.ImageService.ImageInfo ImageInfo, System.IO.Stream ImageData) {
            this.ImageInfo = ImageInfo;
            this.ImageData = ImageData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddImageResponse {
        
        public AddImageResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImageDownloadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ImageDownloadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public WPFClient.ImageService.ImageInfo ImageInfo;
        
        public ImageDownloadRequest() {
        }
        
        public ImageDownloadRequest(WPFClient.ImageService.ImageInfo ImageInfo) {
            this.ImageInfo = ImageInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImageDownloadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ImageDownloadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream ImageData;
        
        public ImageDownloadResponse() {
        }
        
        public ImageDownloadResponse(System.IO.Stream ImageData) {
            this.ImageData = ImageData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImageDeleteRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ImageDeleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public WPFClient.ImageService.ImageInfo ImageInfo;
        
        public ImageDeleteRequest() {
        }
        
        public ImageDeleteRequest(WPFClient.ImageService.ImageInfo ImageInfo) {
            this.ImageInfo = ImageInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteImageResponse {
        
        public DeleteImageResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImageServiceChannel : WPFClient.ImageService.IImageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImageServiceClient : System.ServiceModel.ClientBase<WPFClient.ImageService.IImageService>, WPFClient.ImageService.IImageService {
        
        public ImageServiceClient() {
        }
        
        public ImageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WPFClient.ImageService.AddImageResponse WPFClient.ImageService.IImageService.AddImage(WPFClient.ImageService.ImageUploadRequest request) {
            return base.Channel.AddImage(request);
        }
        
        public void AddImage(WPFClient.ImageService.ImageInfo ImageInfo, System.IO.Stream ImageData) {
            WPFClient.ImageService.ImageUploadRequest inValue = new WPFClient.ImageService.ImageUploadRequest();
            inValue.ImageInfo = ImageInfo;
            inValue.ImageData = ImageData;
            WPFClient.ImageService.AddImageResponse retVal = ((WPFClient.ImageService.IImageService)(this)).AddImage(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WPFClient.ImageService.AddImageResponse> WPFClient.ImageService.IImageService.AddImageAsync(WPFClient.ImageService.ImageUploadRequest request) {
            return base.Channel.AddImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<WPFClient.ImageService.AddImageResponse> AddImageAsync(WPFClient.ImageService.ImageInfo ImageInfo, System.IO.Stream ImageData) {
            WPFClient.ImageService.ImageUploadRequest inValue = new WPFClient.ImageService.ImageUploadRequest();
            inValue.ImageInfo = ImageInfo;
            inValue.ImageData = ImageData;
            return ((WPFClient.ImageService.IImageService)(this)).AddImageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WPFClient.ImageService.ImageDownloadResponse WPFClient.ImageService.IImageService.GetImage(WPFClient.ImageService.ImageDownloadRequest request) {
            return base.Channel.GetImage(request);
        }
        
        public System.IO.Stream GetImage(WPFClient.ImageService.ImageInfo ImageInfo) {
            WPFClient.ImageService.ImageDownloadRequest inValue = new WPFClient.ImageService.ImageDownloadRequest();
            inValue.ImageInfo = ImageInfo;
            WPFClient.ImageService.ImageDownloadResponse retVal = ((WPFClient.ImageService.IImageService)(this)).GetImage(inValue);
            return retVal.ImageData;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WPFClient.ImageService.ImageDownloadResponse> WPFClient.ImageService.IImageService.GetImageAsync(WPFClient.ImageService.ImageDownloadRequest request) {
            return base.Channel.GetImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<WPFClient.ImageService.ImageDownloadResponse> GetImageAsync(WPFClient.ImageService.ImageInfo ImageInfo) {
            WPFClient.ImageService.ImageDownloadRequest inValue = new WPFClient.ImageService.ImageDownloadRequest();
            inValue.ImageInfo = ImageInfo;
            return ((WPFClient.ImageService.IImageService)(this)).GetImageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WPFClient.ImageService.DeleteImageResponse WPFClient.ImageService.IImageService.DeleteImage(WPFClient.ImageService.ImageDeleteRequest request) {
            return base.Channel.DeleteImage(request);
        }
        
        public void DeleteImage(WPFClient.ImageService.ImageInfo ImageInfo) {
            WPFClient.ImageService.ImageDeleteRequest inValue = new WPFClient.ImageService.ImageDeleteRequest();
            inValue.ImageInfo = ImageInfo;
            WPFClient.ImageService.DeleteImageResponse retVal = ((WPFClient.ImageService.IImageService)(this)).DeleteImage(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WPFClient.ImageService.DeleteImageResponse> WPFClient.ImageService.IImageService.DeleteImageAsync(WPFClient.ImageService.ImageDeleteRequest request) {
            return base.Channel.DeleteImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<WPFClient.ImageService.DeleteImageResponse> DeleteImageAsync(WPFClient.ImageService.ImageInfo ImageInfo) {
            WPFClient.ImageService.ImageDeleteRequest inValue = new WPFClient.ImageService.ImageDeleteRequest();
            inValue.ImageInfo = ImageInfo;
            return ((WPFClient.ImageService.IImageService)(this)).DeleteImageAsync(inValue);
        }
    }
}
